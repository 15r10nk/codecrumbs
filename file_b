Name:              <module>
Filename:          foo
Argument count:    0
Positional-only arguments: 0
Kw-only arguments: 0
Number of locals:  0
Stack size:        8
Flags:             NOFREE
Constants:
   0: 0
   1: ('absolute_import',)
   2: ('Mapping', 'MutableMapping')
   3: ('RLock',)
   4: <code object RLock at 0x7f822e6a8240, file "foo", line 11>
   5: 'RLock'
   6: ('OrderedDict',)
   7: 1
   8: ('InvalidHeader',)
   9: ('six',)
  10: ('iterkeys', 'itervalues')
  11: 'RecentlyUsedContainer'
  12: 'HTTPHeaderDict'
  13: <code object RecentlyUsedContainer at 0x7f822e6a8870, file "foo", line 31>
  14: <code object HTTPHeaderDict at 0x7f822e6ac7c0, file "foo", line 107>
  15: None
Names:
   0: __future__
   1: absolute_import
   2: collections.abc
   3: Mapping
   4: MutableMapping
   5: ImportError
   6: collections
   7: threading
   8: RLock
   9: OrderedDict
  10: exceptions
  11: InvalidHeader
  12: packages
  13: six
  14: packages.six
  15: iterkeys
  16: itervalues
  17: __all__
  18: object
  19: _Null
  20: RecentlyUsedContainer
  21: HTTPHeaderDictLOAD_CONST 0 0
LOAD_CONST 1 2
IMPORT_NAME 0 4
IMPORT_FROM 1 6
STORE_NAME 1 8
POP_TOP None 10
SETUP_FINALLY 20 12
LOAD_CONST 0 14
LOAD_CONST 2 16
IMPORT_NAME 2 18
IMPORT_FROM 3 20
STORE_NAME 3 22
IMPORT_FROM 4 24
STORE_NAME 4 26
POP_TOP None 28
POP_BLOCK None 30
JUMP_FORWARD 36 32
DUP_TOP None 34
LOAD_NAME 5 36
COMPARE_OP 10 38
POP_JUMP_IF_FALSE 68 40
POP_TOP None 42
POP_TOP None 44
POP_TOP None 46
LOAD_CONST 0 48
LOAD_CONST 2 50
IMPORT_NAME 6 52
IMPORT_FROM 3 54
STORE_NAME 3 56
IMPORT_FROM 4 58
STORE_NAME 4 60
POP_TOP None 62
POP_EXCEPT None 64
JUMP_FORWARD 2 66
END_FINALLY None 68
SETUP_FINALLY 16 70
LOAD_CONST 0 72
LOAD_CONST 3 74
IMPORT_NAME 7 76
IMPORT_FROM 8 78
STORE_NAME 8 80
POP_TOP None 82
POP_BLOCK None 84
JUMP_FORWARD 34 86
DUP_TOP None 88
LOAD_NAME 5 90
COMPARE_OP 10 92
POP_JUMP_IF_FALSE 120 94
POP_TOP None 96
POP_TOP None 98
POP_TOP None 100
LOAD_BUILD_CLASS None 102
LOAD_CONST 4 104
LOAD_CONST 5 106
MAKE_FUNCTION 0 108
LOAD_CONST 5 110
CALL_FUNCTION 2 112
STORE_NAME 8 114
POP_EXCEPT None 116
JUMP_FORWARD 2 118
END_FINALLY None 120
LOAD_CONST 0 122
LOAD_CONST 6 124
IMPORT_NAME 6 126
IMPORT_FROM 9 128
STORE_NAME 9 130
POP_TOP None 132
LOAD_CONST 7 134
LOAD_CONST 8 136
IMPORT_NAME 10 138
IMPORT_FROM 11 140
STORE_NAME 11 142
POP_TOP None 144
LOAD_CONST 7 146
LOAD_CONST 9 148
IMPORT_NAME 12 150
IMPORT_FROM 13 152
STORE_NAME 13 154
POP_TOP None 156
LOAD_CONST 7 158
LOAD_CONST 10 160
IMPORT_NAME 14 162
IMPORT_FROM 15 164
STORE_NAME 15 166
IMPORT_FROM 16 168
STORE_NAME 16 170
POP_TOP None 172
LOAD_CONST 11 174
LOAD_CONST 12 176
BUILD_LIST 2 178
STORE_NAME 17 180
LOAD_NAME 18 182
CALL_FUNCTION 0 184
STORE_NAME 19 186
LOAD_BUILD_CLASS None 188
LOAD_CONST 13 190
LOAD_CONST 11 192
MAKE_FUNCTION 0 194
LOAD_CONST 11 196
LOAD_NAME 4 198
CALL_FUNCTION 3 200
STORE_NAME 20 202
LOAD_BUILD_CLASS None 204
LOAD_CONST 14 206
LOAD_CONST 12 208
MAKE_FUNCTION 0 210
LOAD_CONST 12 212
LOAD_NAME 4 214
CALL_FUNCTION 3 216
STORE_NAME 21 218
LOAD_CONST 15 220
RETURN_VALUE None 222
Name:              RLock
Filename:          foo
Argument count:    0
Positional-only arguments: 0
Kw-only arguments: 0
Number of locals:  0
Stack size:        2
Flags:             NOFREE
Constants:
   0: 'RLock'
   1: <code object __enter__ at 0x7f822e6a80e0, file "foo", line 12>
   2: 'RLock.__enter__'
   3: <code object __exit__ at 0x7f822e6a8190, file "foo", line 15>
   4: 'RLock.__exit__'
   5: None
Names:
   0: __name__
   1: __module__
   2: __qualname__
   3: __enter__
   4: __exit__LOAD_NAME 0 0
STORE_NAME 1 2
LOAD_CONST 0 4
STORE_NAME 2 6
LOAD_CONST 1 8
LOAD_CONST 2 10
MAKE_FUNCTION 0 12
STORE_NAME 3 14
LOAD_CONST 3 16
LOAD_CONST 4 18
MAKE_FUNCTION 0 20
STORE_NAME 4 22
LOAD_CONST 5 24
RETURN_VALUE None 26
Name:              __enter__
Filename:          foo
Argument count:    1
Positional-only arguments: 0
Kw-only arguments: 0
Number of locals:  1
Stack size:        1
Flags:             OPTIMIZED, NEWLOCALS, NOFREE
Constants:
   0: None
Variable names:
   0: selfLOAD_CONST 0 0
RETURN_VALUE None 2
Name:              __exit__
Filename:          foo
Argument count:    4
Positional-only arguments: 0
Kw-only arguments: 0
Number of locals:  4
Stack size:        1
Flags:             OPTIMIZED, NEWLOCALS, NOFREE
Constants:
   0: None
Variable names:
   0: self
   1: exc_type
   2: exc_value
   3: tracebackLOAD_CONST 0 0
RETURN_VALUE None 2
Name:              RecentlyUsedContainer
Filename:          foo
Argument count:    0
Positional-only arguments: 0
Kw-only arguments: 0
Number of locals:  0
Stack size:        3
Flags:             NOFREE
Constants:
   0: 'RecentlyUsedContainer'
   1: '\n    Provides a thread-safe dict-like container which maintains up to\n    ``maxsize`` keys while throwing away the least-recently-used keys beyond\n    ``maxsize``.\n\n    :param maxsize:\n        Maximum number of recent elements to retain.\n\n    :param dispose_func:\n        Every time an item is evicted from the container,\n        ``dispose_func(value)`` is called.  Callback which will get called\n    '
   2: 10
   3: None
   4: <code object __init__ at 0x7f822e6a82f0, file "foo", line 47>
   5: 'RecentlyUsedContainer.__init__'
   6: <code object __getitem__ at 0x7f822e6a83a0, file "foo", line 54>
   7: 'RecentlyUsedContainer.__getitem__'
   8: <code object __setitem__ at 0x7f822e6a8500, file "foo", line 61>
   9: 'RecentlyUsedContainer.__setitem__'
  10: <code object __delitem__ at 0x7f822e6a8450, file "foo", line 76>
  11: 'RecentlyUsedContainer.__delitem__'
  12: <code object __len__ at 0x7f822e6a85b0, file "foo", line 83>
  13: 'RecentlyUsedContainer.__len__'
  14: <code object __iter__ at 0x7f822e6a8660, file "foo", line 87>
  15: 'RecentlyUsedContainer.__iter__'
  16: <code object clear at 0x7f822e6a8710, file "foo", line 92>
  17: 'RecentlyUsedContainer.clear'
  18: <code object keys at 0x7f822e6a87c0, file "foo", line 102>
  19: 'RecentlyUsedContainer.keys'
  20: (10, None)
Names:
   0: __name__
   1: __module__
   2: __qualname__
   3: __doc__
   4: OrderedDict
   5: ContainerCls
   6: __init__
   7: __getitem__
   8: __setitem__
   9: __delitem__
  10: __len__
  11: __iter__
  12: clear
  13: keysLOAD_NAME 0 0
STORE_NAME 1 2
LOAD_CONST 0 4
STORE_NAME 2 6
LOAD_CONST 1 8
STORE_NAME 3 10
LOAD_NAME 4 12
STORE_NAME 5 14
LOAD_CONST 20 16
LOAD_CONST 4 18
LOAD_CONST 5 20
MAKE_FUNCTION 1 22
STORE_NAME 6 24
LOAD_CONST 6 26
LOAD_CONST 7 28
MAKE_FUNCTION 0 30
STORE_NAME 7 32
LOAD_CONST 8 34
LOAD_CONST 9 36
MAKE_FUNCTION 0 38
STORE_NAME 8 40
LOAD_CONST 10 42
LOAD_CONST 11 44
MAKE_FUNCTION 0 46
STORE_NAME 9 48
LOAD_CONST 12 50
LOAD_CONST 13 52
MAKE_FUNCTION 0 54
STORE_NAME 10 56
LOAD_CONST 14 58
LOAD_CONST 15 60
MAKE_FUNCTION 0 62
STORE_NAME 11 64
LOAD_CONST 16 66
LOAD_CONST 17 68
MAKE_FUNCTION 0 70
STORE_NAME 12 72
LOAD_CONST 18 74
LOAD_CONST 19 76
MAKE_FUNCTION 0 78
STORE_NAME 13 80
LOAD_CONST 3 82
RETURN_VALUE None 84
Name:              __init__
Filename:          foo
Argument count:    3
Positional-only arguments: 0
Kw-only arguments: 0
Number of locals:  3
Stack size:        2
Flags:             OPTIMIZED, NEWLOCALS, NOFREE
Constants:
   0: None
Names:
   0: _maxsize
   1: dispose_func
   2: ContainerCls
   3: _container
   4: RLock
   5: lock
Variable names:
   0: self
   1: maxsize
   2: dispose_funcLOAD_FAST 1 0
LOAD_FAST 0 2
STORE_ATTR 0 4
LOAD_FAST 2 6
LOAD_FAST 0 8
STORE_ATTR 1 10
LOAD_FAST 0 12
LOAD_METHOD 2 14
CALL_METHOD 0 16
LOAD_FAST 0 18
STORE_ATTR 3 20
LOAD_GLOBAL 4 22
CALL_FUNCTION 0 24
LOAD_FAST 0 26
STORE_ATTR 5 28
LOAD_CONST 0 30
RETURN_VALUE None 32
Name:              __getitem__
Filename:          foo
Argument count:    2
Positional-only arguments: 0
Kw-only arguments: 0
Number of locals:  3
Stack size:        10
Flags:             OPTIMIZED, NEWLOCALS, NOFREE
Constants:
   0: None
Names:
   0: lock
   1: _container
   2: pop
Variable names:
   0: self
   1: key
   2: itemLOAD_FAST 0 0
LOAD_ATTR 0 2
SETUP_WITH 40 4
POP_TOP None 6
LOAD_FAST 0 8
LOAD_ATTR 1 10
LOAD_METHOD 2 12
LOAD_FAST 1 14
CALL_METHOD 1 16
STORE_FAST 2 18
LOAD_FAST 2 20
LOAD_FAST 0 22
LOAD_ATTR 1 24
LOAD_FAST 1 26
STORE_SUBSCR None 28
LOAD_FAST 2 30
POP_BLOCK None 32
ROT_TWO None 34
BEGIN_FINALLY None 36
WITH_CLEANUP_START None 38
WITH_CLEANUP_FINISH None 40
POP_FINALLY 0 42
RETURN_VALUE None 44
WITH_CLEANUP_START None 46
WITH_CLEANUP_FINISH None 48
END_FINALLY None 50
LOAD_CONST 0 52
RETURN_VALUE None 54
Name:              __setitem__
Filename:          foo
Argument count:    3
Positional-only arguments: 0
Kw-only arguments: 0
Number of locals:  5
Stack size:        9
Flags:             OPTIMIZED, NEWLOCALS, NOFREE
Constants:
   0: None
   1: False
   2: ('last',)
Names:
   0: _Null
   1: lock
   2: _container
   3: get
   4: len
   5: _maxsize
   6: popitem
   7: dispose_func
Variable names:
   0: self
   1: key
   2: value
   3: evicted_value
   4: _keyLOAD_GLOBAL 0 0
STORE_FAST 3 2
LOAD_FAST 0 4
LOAD_ATTR 1 6
SETUP_WITH 64 8
POP_TOP None 10
LOAD_FAST 0 12
LOAD_ATTR 2 14
LOAD_METHOD 3 16
LOAD_FAST 1 18
LOAD_GLOBAL 0 20
CALL_METHOD 2 22
STORE_FAST 3 24
LOAD_FAST 2 26
LOAD_FAST 0 28
LOAD_ATTR 2 30
LOAD_FAST 1 32
STORE_SUBSCR None 34
LOAD_GLOBAL 4 36
LOAD_FAST 0 38
LOAD_ATTR 2 40
CALL_FUNCTION 1 42
LOAD_FAST 0 44
LOAD_ATTR 5 46
COMPARE_OP 4 48
POP_JUMP_IF_FALSE 70 50
LOAD_FAST 0 52
LOAD_ATTR 2 54
LOAD_ATTR 6 56
LOAD_CONST 1 58
LOAD_CONST 2 60
CALL_FUNCTION_KW 1 62
UNPACK_SEQUENCE 2 64
STORE_FAST 4 66
STORE_FAST 3 68
POP_BLOCK None 70
BEGIN_FINALLY None 72
WITH_CLEANUP_START None 74
WITH_CLEANUP_FINISH None 76
END_FINALLY None 78
LOAD_FAST 0 80
LOAD_ATTR 7 82
POP_JUMP_IF_FALSE 104 84
LOAD_FAST 3 86
LOAD_GLOBAL 0 88
COMPARE_OP 9 90
POP_JUMP_IF_FALSE 104 92
LOAD_FAST 0 94
LOAD_METHOD 7 96
LOAD_FAST 3 98
CALL_METHOD 1 100
POP_TOP None 102
LOAD_CONST 0 104
RETURN_VALUE None 106
Name:              __delitem__
Filename:          foo
Argument count:    2
Positional-only arguments: 0
Kw-only arguments: 0
Number of locals:  3
Stack size:        9
Flags:             OPTIMIZED, NEWLOCALS, NOFREE
Constants:
   0: None
Names:
   0: lock
   1: _container
   2: pop
   3: dispose_func
Variable names:
   0: self
   1: key
   2: valueLOAD_FAST 0 0
LOAD_ATTR 0 2
SETUP_WITH 18 4
POP_TOP None 6
LOAD_FAST 0 8
LOAD_ATTR 1 10
LOAD_METHOD 2 12
LOAD_FAST 1 14
CALL_METHOD 1 16
STORE_FAST 2 18
POP_BLOCK None 20
BEGIN_FINALLY None 22
WITH_CLEANUP_START None 24
WITH_CLEANUP_FINISH None 26
END_FINALLY None 28
LOAD_FAST 0 30
LOAD_ATTR 3 32
POP_JUMP_IF_FALSE 46 34
LOAD_FAST 0 36
LOAD_METHOD 3 38
LOAD_FAST 2 40
CALL_METHOD 1 42
POP_TOP None 44
LOAD_CONST 0 46
RETURN_VALUE None 48
Name:              __len__
Filename:          foo
Argument count:    1
Positional-only arguments: 0
Kw-only arguments: 0
Number of locals:  1
Stack size:        10
Flags:             OPTIMIZED, NEWLOCALS, NOFREE
Constants:
   0: None
Names:
   0: lock
   1: len
   2: _container
Variable names:
   0: selfLOAD_FAST 0 0
LOAD_ATTR 0 2
SETUP_WITH 24 4
POP_TOP None 6
LOAD_GLOBAL 1 8
LOAD_FAST 0 10
LOAD_ATTR 2 12
CALL_FUNCTION 1 14
POP_BLOCK None 16
ROT_TWO None 18
BEGIN_FINALLY None 20
WITH_CLEANUP_START None 22
WITH_CLEANUP_FINISH None 24
POP_FINALLY 0 26
RETURN_VALUE None 28
WITH_CLEANUP_START None 30
WITH_CLEANUP_FINISH None 32
END_FINALLY None 34
LOAD_CONST 0 36
RETURN_VALUE None 38
Name:              __iter__
Filename:          foo
Argument count:    1
Positional-only arguments: 0
Kw-only arguments: 0
Number of locals:  1
Stack size:        2
Flags:             OPTIMIZED, NEWLOCALS, NOFREE
Constants:
   0: None
   1: 'Iteration over this class is unlikely to be threadsafe.'
Names:
   0: NotImplementedError
Variable names:
   0: selfLOAD_GLOBAL 0 0
LOAD_CONST 1 2
CALL_FUNCTION 1 4
RAISE_VARARGS 1 6
LOAD_CONST 0 8
RETURN_VALUE None 10
Name:              clear
Filename:          foo
Argument count:    1
Positional-only arguments: 0
Kw-only arguments: 0
Number of locals:  3
Stack size:        9
Flags:             OPTIMIZED, NEWLOCALS, NOFREE
Constants:
   0: None
Names:
   0: lock
   1: list
   2: itervalues
   3: _container
   4: clear
   5: dispose_func
Variable names:
   0: self
   1: values
   2: valueLOAD_FAST 0 0
LOAD_ATTR 0 2
SETUP_WITH 30 4
POP_TOP None 6
LOAD_GLOBAL 1 8
LOAD_GLOBAL 2 10
LOAD_FAST 0 12
LOAD_ATTR 3 14
CALL_FUNCTION 1 16
CALL_FUNCTION 1 18
STORE_FAST 1 20
LOAD_FAST 0 22
LOAD_ATTR 3 24
LOAD_METHOD 4 26
CALL_METHOD 0 28
POP_TOP None 30
POP_BLOCK None 32
BEGIN_FINALLY None 34
WITH_CLEANUP_START None 36
WITH_CLEANUP_FINISH None 38
END_FINALLY None 40
LOAD_FAST 0 42
LOAD_ATTR 5 44
POP_JUMP_IF_FALSE 68 46
LOAD_FAST 1 48
GET_ITER None 50
FOR_ITER 14 52
STORE_FAST 2 54
LOAD_FAST 0 56
LOAD_METHOD 5 58
LOAD_FAST 2 60
CALL_METHOD 1 62
POP_TOP None 64
JUMP_ABSOLUTE 52 66
LOAD_CONST 0 68
RETURN_VALUE None 70
Name:              keys
Filename:          foo
Argument count:    1
Positional-only arguments: 0
Kw-only arguments: 0
Number of locals:  1
Stack size:        10
Flags:             OPTIMIZED, NEWLOCALS, NOFREE
Constants:
   0: None
Names:
   0: lock
   1: list
   2: iterkeys
   3: _container
Variable names:
   0: selfLOAD_FAST 0 0
LOAD_ATTR 0 2
SETUP_WITH 28 4
POP_TOP None 6
LOAD_GLOBAL 1 8
LOAD_GLOBAL 2 10
LOAD_FAST 0 12
LOAD_ATTR 3 14
CALL_FUNCTION 1 16
CALL_FUNCTION 1 18
POP_BLOCK None 20
ROT_TWO None 22
BEGIN_FINALLY None 24
WITH_CLEANUP_START None 26
WITH_CLEANUP_FINISH None 28
POP_FINALLY 0 30
RETURN_VALUE None 32
WITH_CLEANUP_START None 34
WITH_CLEANUP_FINISH None 36
END_FINALLY None 38
LOAD_CONST 0 40
RETURN_VALUE None 42
Name:              HTTPHeaderDict
Filename:          foo
Argument count:    0
Positional-only arguments: 0
Kw-only arguments: 0
Number of locals:  0
Stack size:        4
Flags:             0x0
Constants:
   0: 'HTTPHeaderDict'
   1: "\n    :param headers:\n        An iterable of field-value pairs. Must not contain multiple field names\n        when compared case-insensitively.\n\n    :param kwargs:\n        Additional field-value pairs to pass in to ``dict.update``.\n\n    A ``dict`` like container for storing HTTP Headers.\n\n    Field names are stored and compared case-insensitively in compliance with\n    RFC 7230. Iteration provides the first case-sensitive key seen for each\n    case-insensitive pair.\n\n    Using ``__setitem__`` syntax overwrites fields that compare equal\n    case-insensitively in order to maintain ``dict``'s api. For fields that\n    compare equal, instead create a new ``HTTPHeaderDict`` and use ``.add``\n    in a loop.\n\n    If multiple fields that are equal case-insensitively are passed to the\n    constructor or ``.update``, the behavior is undefined and some will be\n    lost.\n\n    >>> headers = HTTPHeaderDict()\n    >>> headers.add('Set-Cookie', 'foo=bar')\n    >>> headers.add('set-cookie', 'baz=quxx')\n    >>> headers['content-length'] = '7'\n    >>> headers['SET-cookie']\n    'foo=bar, baz=quxx'\n    >>> headers['Content-Length']\n    '7'\n    "
   2: None
   3: <code object __init__ at 0x7f822e6a8920, file "foo", line 141>
   4: 'HTTPHeaderDict.__init__'
   5: <code object __setitem__ at 0x7f822e6a89d0, file "foo", line 152>
   6: 'HTTPHeaderDict.__setitem__'
   7: <code object __getitem__ at 0x7f822e6a8a80, file "foo", line 156>
   8: 'HTTPHeaderDict.__getitem__'
   9: <code object __delitem__ at 0x7f822e6a8b30, file "foo", line 160>
  10: 'HTTPHeaderDict.__delitem__'
  11: <code object __contains__ at 0x7f822e6a8be0, file "foo", line 163>
  12: 'HTTPHeaderDict.__contains__'
  13: <code object __eq__ at 0x7f822e6a8d40, file "foo", line 166>
  14: 'HTTPHeaderDict.__eq__'
  15: <code object __ne__ at 0x7f822e6a8df0, file "foo", line 175>
  16: 'HTTPHeaderDict.__ne__'
  17: <code object __len__ at 0x7f822e6a8ea0, file "foo", line 184>
  18: 'HTTPHeaderDict.__len__'
  19: <code object __iter__ at 0x7f822e6a8f50, file "foo", line 187>
  20: 'HTTPHeaderDict.__iter__'
  21: <code object pop at 0x7f822e6ac030, file "foo", line 192>
  22: 'HTTPHeaderDict.pop'
  23: <code object discard at 0x7f822e6ac0e0, file "foo", line 209>
  24: 'HTTPHeaderDict.discard'
  25: <code object add at 0x7f822e6ac190, file "foo", line 215>
  26: 'HTTPHeaderDict.add'
  27: <code object extend at 0x7f822e6ac240, file "foo", line 231>
  28: 'HTTPHeaderDict.extend'
  29: <code object getlist at 0x7f822e6ac2f0, file "foo", line 259>
  30: 'HTTPHeaderDict.getlist'
  31: <code object __repr__ at 0x7f822e6ac3a0, file "foo", line 279>
  32: 'HTTPHeaderDict.__repr__'
  33: <code object _copy_from at 0x7f822e6ac450, file "foo", line 282>
  34: 'HTTPHeaderDict._copy_from'
  35: <code object copy at 0x7f822e6ac500, file "foo", line 290>
  36: 'HTTPHeaderDict.copy'
  37: <code object iteritems at 0x7f822e6ac5b0, file "foo", line 295>
  38: 'HTTPHeaderDict.iteritems'
  39: <code object itermerged at 0x7f822e6ac660, file "foo", line 302>
  40: 'HTTPHeaderDict.itermerged'
  41: <code object items at 0x7f822e6ac710, file "foo", line 308>
  42: 'HTTPHeaderDict.items'
  43: <code object from_httplib at 0x7f822e6ac920, file "foo", line 311>
  44: 'HTTPHeaderDict.from_httplib'
  45: (None,)
Names:
   0: __name__
   1: __module__
   2: __qualname__
   3: __doc__
   4: __init__
   5: __setitem__
   6: __getitem__
   7: __delitem__
   8: __contains__
   9: __eq__
  10: __ne__
  11: six
  12: PY2
  13: MutableMapping
  14: iterkeys
  15: itervalues
  16: object
  17: _HTTPHeaderDict__marker
  18: __len__
  19: __iter__
  20: pop
  21: discard
  22: add
  23: extend
  24: getlist
  25: getheaders
  26: getallmatchingheaders
  27: iget
  28: get_all
  29: __repr__
  30: _copy_from
  31: copy
  32: iteritems
  33: itermerged
  34: items
  35: classmethod
  36: from_httplib
  37: __classcell__
Cell variables:
   0: __class__LOAD_NAME 0 0
STORE_NAME 1 2
LOAD_CONST 0 4
STORE_NAME 2 6
LOAD_CONST 1 8
STORE_NAME 3 10
LOAD_CONST 45 12
LOAD_CLOSURE 0 14
BUILD_TUPLE 1 16
LOAD_CONST 3 18
LOAD_CONST 4 20
MAKE_FUNCTION 9 22
STORE_NAME 4 24
LOAD_CONST 5 26
LOAD_CONST 6 28
MAKE_FUNCTION 0 30
STORE_NAME 5 32
LOAD_CONST 7 34
LOAD_CONST 8 36
MAKE_FUNCTION 0 38
STORE_NAME 6 40
LOAD_CONST 9 42
LOAD_CONST 10 44
MAKE_FUNCTION 0 46
STORE_NAME 7 48
LOAD_CONST 11 50
LOAD_CONST 12 52
MAKE_FUNCTION 0 54
STORE_NAME 8 56
LOAD_CONST 13 58
LOAD_CONST 14 60
MAKE_FUNCTION 0 62
STORE_NAME 9 64
LOAD_CONST 15 66
LOAD_CONST 16 68
MAKE_FUNCTION 0 70
STORE_NAME 10 72
LOAD_NAME 11 74
LOAD_ATTR 12 76
POP_JUMP_IF_FALSE 92 78
LOAD_NAME 13 80
LOAD_ATTR 14 82
STORE_NAME 14 84
LOAD_NAME 13 86
LOAD_ATTR 15 88
STORE_NAME 15 90
LOAD_NAME 16 92
CALL_FUNCTION 0 94
STORE_NAME 17 96
LOAD_CONST 17 98
LOAD_CONST 18 100
MAKE_FUNCTION 0 102
STORE_NAME 18 104
LOAD_CONST 19 106
LOAD_CONST 20 108
MAKE_FUNCTION 0 110
STORE_NAME 19 112
LOAD_NAME 17 114
BUILD_TUPLE 1 116
LOAD_CONST 21 118
LOAD_CONST 22 120
MAKE_FUNCTION 1 122
STORE_NAME 20 124
LOAD_CONST 23 126
LOAD_CONST 24 128
MAKE_FUNCTION 0 130
STORE_NAME 21 132
LOAD_CONST 25 134
LOAD_CONST 26 136
MAKE_FUNCTION 0 138
STORE_NAME 22 140
LOAD_CONST 27 142
LOAD_CONST 28 144
MAKE_FUNCTION 0 146
STORE_NAME 23 148
LOAD_NAME 17 150
BUILD_TUPLE 1 152
LOAD_CONST 29 154
LOAD_CONST 30 156
MAKE_FUNCTION 1 158
STORE_NAME 24 160
LOAD_NAME 24 162
STORE_NAME 25 164
LOAD_NAME 24 166
STORE_NAME 26 168
LOAD_NAME 24 170
STORE_NAME 27 172
LOAD_NAME 24 174
STORE_NAME 28 176
LOAD_CONST 31 178
LOAD_CONST 32 180
MAKE_FUNCTION 0 182
STORE_NAME 29 184
LOAD_CONST 33 186
LOAD_CONST 34 188
MAKE_FUNCTION 0 190
STORE_NAME 30 192
LOAD_CONST 35 194
LOAD_CONST 36 196
MAKE_FUNCTION 0 198
STORE_NAME 31 200
LOAD_CONST 37 202
LOAD_CONST 38 204
MAKE_FUNCTION 0 206
STORE_NAME 32 208
LOAD_CONST 39 210
LOAD_CONST 40 212
MAKE_FUNCTION 0 214
STORE_NAME 33 216
LOAD_CONST 41 218
LOAD_CONST 42 220
MAKE_FUNCTION 0 222
STORE_NAME 34 224
LOAD_NAME 35 226
LOAD_CONST 43 228
LOAD_CONST 44 230
MAKE_FUNCTION 0 232
CALL_FUNCTION 1 234
STORE_NAME 36 236
LOAD_CLOSURE 0 238
DUP_TOP None 240
STORE_NAME 37 242
RETURN_VALUE None 244
Name:              __init__
Filename:          foo
Argument count:    2
Positional-only arguments: 0
Kw-only arguments: 0
Number of locals:  3
Stack size:        3
Flags:             OPTIMIZED, NEWLOCALS, VARKEYWORDS
Constants:
   0: None
Names:
   0: super
   1: HTTPHeaderDict
   2: __init__
   3: OrderedDict
   4: _container
   5: isinstance
   6: _copy_from
   7: extend
Variable names:
   0: self
   1: headers
   2: kwargs
Free variables:
   0: __class__LOAD_GLOBAL 0 0
LOAD_GLOBAL 1 2
LOAD_FAST 0 4
CALL_FUNCTION 2 6
LOAD_METHOD 2 8
CALL_METHOD 0 10
POP_TOP None 12
LOAD_GLOBAL 3 14
CALL_FUNCTION 0 16
LOAD_FAST 0 18
STORE_ATTR 4 20
LOAD_FAST 1 22
LOAD_CONST 0 24
COMPARE_OP 9 26
POP_JUMP_IF_FALSE 62 28
LOAD_GLOBAL 5 30
LOAD_FAST 1 32
LOAD_GLOBAL 1 34
CALL_FUNCTION 2 36
POP_JUMP_IF_FALSE 52 38
LOAD_FAST 0 40
LOAD_METHOD 6 42
LOAD_FAST 1 44
CALL_METHOD 1 46
POP_TOP None 48
JUMP_FORWARD 10 50
LOAD_FAST 0 52
LOAD_METHOD 7 54
LOAD_FAST 1 56
CALL_METHOD 1 58
POP_TOP None 60
LOAD_FAST 2 62
POP_JUMP_IF_FALSE 76 64
LOAD_FAST 0 66
LOAD_METHOD 7 68
LOAD_FAST 2 70
CALL_METHOD 1 72
POP_TOP None 74
LOAD_CONST 0 76
RETURN_VALUE None 78
Name:              __setitem__
Filename:          foo
Argument count:    3
Positional-only arguments: 0
Kw-only arguments: 0
Number of locals:  3
Stack size:        4
Flags:             OPTIMIZED, NEWLOCALS, NOFREE
Constants:
   0: None
Names:
   0: _container
   1: lower
Variable names:
   0: self
   1: key
   2: valLOAD_FAST 1 0
LOAD_FAST 2 2
BUILD_LIST 2 4
LOAD_FAST 0 6
LOAD_ATTR 0 8
LOAD_FAST 1 10
LOAD_METHOD 1 12
CALL_METHOD 0 14
STORE_SUBSCR None 16
LOAD_FAST 0 18
LOAD_ATTR 0 20
LOAD_FAST 1 22
LOAD_METHOD 1 24
CALL_METHOD 0 26
BINARY_SUBSCR None 28
RETURN_VALUE None 30
Name:              __getitem__
Filename:          foo
Argument count:    2
Positional-only arguments: 0
Kw-only arguments: 0
Number of locals:  3
Stack size:        5
Flags:             OPTIMIZED, NEWLOCALS, NOFREE
Constants:
   0: None
   1: ', '
   2: 1
Names:
   0: _container
   1: lower
   2: join
Variable names:
   0: self
   1: key
   2: valLOAD_FAST 0 0
LOAD_ATTR 0 2
LOAD_FAST 1 4
LOAD_METHOD 1 6
CALL_METHOD 0 8
BINARY_SUBSCR None 10
STORE_FAST 2 12
LOAD_CONST 1 14
LOAD_METHOD 2 16
LOAD_FAST 2 18
LOAD_CONST 2 20
LOAD_CONST 0 22
BUILD_SLICE 2 24
BINARY_SUBSCR None 26
CALL_METHOD 1 28
RETURN_VALUE None 30
Name:              __delitem__
Filename:          foo
Argument count:    2
Positional-only arguments: 0
Kw-only arguments: 0
Number of locals:  2
Stack size:        3
Flags:             OPTIMIZED, NEWLOCALS, NOFREE
Constants:
   0: None
Names:
   0: _container
   1: lower
Variable names:
   0: self
   1: keyLOAD_FAST 0 0
LOAD_ATTR 0 2
LOAD_FAST 1 4
LOAD_METHOD 1 6
CALL_METHOD 0 8
DELETE_SUBSCR None 10
LOAD_CONST 0 12
RETURN_VALUE None 14
Name:              __contains__
Filename:          foo
Argument count:    2
Positional-only arguments: 0
Kw-only arguments: 0
Number of locals:  2
Stack size:        2
Flags:             OPTIMIZED, NEWLOCALS, NOFREE
Constants:
   0: None
Names:
   0: lower
   1: _container
Variable names:
   0: self
   1: keyLOAD_FAST 1 0
LOAD_METHOD 0 2
CALL_METHOD 0 4
LOAD_FAST 0 6
LOAD_ATTR 1 8
COMPARE_OP 6 10
RETURN_VALUE None 12
Name:              __eq__
Filename:          foo
Argument count:    2
Positional-only arguments: 0
Kw-only arguments: 0
Number of locals:  2
Stack size:        5
Flags:             OPTIMIZED, NEWLOCALS, NOFREE
Constants:
   0: None
   1: 'keys'
   2: False
   3: <code object <genexpr> at 0x7f822e6a8c90, file "foo", line 171>
   4: 'HTTPHeaderDict.__eq__.<locals>.<genexpr>'
Names:
   0: isinstance
   1: Mapping
   2: hasattr
   3: type
   4: dict
   5: itermerged
Variable names:
   0: self
   1: otherLOAD_GLOBAL 0 0
LOAD_FAST 1 2
LOAD_GLOBAL 1 4
CALL_FUNCTION 2 6
POP_JUMP_IF_TRUE 24 8
LOAD_GLOBAL 2 10
LOAD_FAST 1 12
LOAD_CONST 1 14
CALL_FUNCTION 2 16
POP_JUMP_IF_TRUE 24 18
LOAD_CONST 2 20
RETURN_VALUE None 22
LOAD_GLOBAL 0 24
LOAD_FAST 1 26
LOAD_GLOBAL 3 28
LOAD_FAST 0 30
CALL_FUNCTION 1 32
CALL_FUNCTION 2 34
POP_JUMP_IF_TRUE 50 36
LOAD_GLOBAL 3 38
LOAD_FAST 0 40
CALL_FUNCTION 1 42
LOAD_FAST 1 44
CALL_FUNCTION 1 46
STORE_FAST 1 48
LOAD_GLOBAL 4 50
LOAD_CONST 3 52
LOAD_CONST 4 54
MAKE_FUNCTION 0 56
LOAD_FAST 0 58
LOAD_METHOD 5 60
CALL_METHOD 0 62
GET_ITER None 64
CALL_FUNCTION 1 66
CALL_FUNCTION 1 68
LOAD_GLOBAL 4 70
LOAD_CONST 3 72
LOAD_CONST 4 74
MAKE_FUNCTION 0 76
LOAD_FAST 1 78
LOAD_METHOD 5 80
CALL_METHOD 0 82
GET_ITER None 84
CALL_FUNCTION 1 86
CALL_FUNCTION 1 88
COMPARE_OP 2 90
RETURN_VALUE None 92
Name:              <genexpr>
Filename:          foo
Argument count:    1
Positional-only arguments: 0
Kw-only arguments: 0
Number of locals:  3
Stack size:        3
Flags:             OPTIMIZED, NEWLOCALS, NESTED, GENERATOR, NOFREE
Constants:
   0: None
Names:
   0: lower
Variable names:
   0: .0
   1: k
   2: vLOAD_FAST 0 0
FOR_ITER 22 2
UNPACK_SEQUENCE 2 4
STORE_FAST 1 6
STORE_FAST 2 8
LOAD_FAST 1 10
LOAD_METHOD 0 12
CALL_METHOD 0 14
LOAD_FAST 2 16
BUILD_TUPLE 2 18
YIELD_VALUE None 20
POP_TOP None 22
JUMP_ABSOLUTE 2 24
LOAD_CONST 0 26
RETURN_VALUE None 28
Name:              <genexpr>
Filename:          foo
Argument count:    1
Positional-only arguments: 0
Kw-only arguments: 0
Number of locals:  3
Stack size:        3
Flags:             OPTIMIZED, NEWLOCALS, NESTED, GENERATOR, NOFREE
Constants:
   0: None
Names:
   0: lower
Variable names:
   0: .0
   1: k
   2: vLOAD_FAST 0 0
FOR_ITER 22 2
UNPACK_SEQUENCE 2 4
STORE_FAST 1 6
STORE_FAST 2 8
LOAD_FAST 1 10
LOAD_METHOD 0 12
CALL_METHOD 0 14
LOAD_FAST 2 16
BUILD_TUPLE 2 18
YIELD_VALUE None 20
POP_TOP None 22
JUMP_ABSOLUTE 2 24
LOAD_CONST 0 26
RETURN_VALUE None 28
Name:              __ne__
Filename:          foo
Argument count:    2
Positional-only arguments: 0
Kw-only arguments: 0
Number of locals:  2
Stack size:        3
Flags:             OPTIMIZED, NEWLOCALS, NOFREE
Constants:
   0: None
Names:
   0: __eq__
Variable names:
   0: self
   1: otherLOAD_FAST 0 0
LOAD_METHOD 0 2
LOAD_FAST 1 4
CALL_METHOD 1 6
UNARY_NOT None 8
RETURN_VALUE None 10
Name:              __len__
Filename:          foo
Argument count:    1
Positional-only arguments: 0
Kw-only arguments: 0
Number of locals:  1
Stack size:        2
Flags:             OPTIMIZED, NEWLOCALS, NOFREE
Constants:
   0: None
Names:
   0: len
   1: _container
Variable names:
   0: selfLOAD_GLOBAL 0 0
LOAD_FAST 0 2
LOAD_ATTR 1 4
CALL_FUNCTION 1 6
RETURN_VALUE None 8
Name:              __iter__
Filename:          foo
Argument count:    1
Positional-only arguments: 0
Kw-only arguments: 0
Number of locals:  2
Stack size:        3
Flags:             OPTIMIZED, NEWLOCALS, GENERATOR, NOFREE
Constants:
   0: None
   1: 0
Names:
   0: _container
   1: values
Variable names:
   0: self
   1: valsLOAD_FAST 0 0
LOAD_ATTR 0 2
LOAD_METHOD 1 4
CALL_METHOD 0 6
GET_ITER None 8
FOR_ITER 14 10
STORE_FAST 1 12
LOAD_FAST 1 14
LOAD_CONST 1 16
BINARY_SUBSCR None 18
YIELD_VALUE None 20
POP_TOP None 22
JUMP_ABSOLUTE 10 24
LOAD_CONST 0 26
RETURN_VALUE None 28
Name:              pop
Filename:          foo
Argument count:    3
Positional-only arguments: 0
Kw-only arguments: 0
Number of locals:  4
Stack size:        8
Flags:             OPTIMIZED, NEWLOCALS, NOFREE
Constants:
   0: 'D.pop(k[,d]) -> v, remove specified key and return the corresponding value.\n        If key is not found, d is returned if given, otherwise KeyError is raised.\n        '
   1: None
Names:
   0: KeyError
   1: _HTTPHeaderDict__marker
Variable names:
   0: self
   1: key
   2: default
   3: valueSETUP_FINALLY 12 0
LOAD_FAST 0 2
LOAD_FAST 1 4
BINARY_SUBSCR None 6
STORE_FAST 3 8
POP_BLOCK None 10
JUMP_FORWARD 36 12
DUP_TOP None 14
LOAD_GLOBAL 0 16
COMPARE_OP 10 18
POP_JUMP_IF_FALSE 48 20
POP_TOP None 22
POP_TOP None 24
POP_TOP None 26
LOAD_FAST 2 28
LOAD_FAST 0 30
LOAD_ATTR 1 32
COMPARE_OP 8 34
POP_JUMP_IF_FALSE 40 36
RAISE_VARARGS 0 38
LOAD_FAST 2 40
ROT_FOUR None 42
POP_EXCEPT None 44
RETURN_VALUE None 46
END_FINALLY None 48
LOAD_FAST 0 50
LOAD_FAST 1 52
DELETE_SUBSCR None 54
LOAD_FAST 3 56
RETURN_VALUE None 58
LOAD_CONST 1 60
RETURN_VALUE None 62
Name:              discard
Filename:          foo
Argument count:    2
Positional-only arguments: 0
Kw-only arguments: 0
Number of locals:  2
Stack size:        8
Flags:             OPTIMIZED, NEWLOCALS, NOFREE
Constants:
   0: None
Names:
   0: KeyError
Variable names:
   0: self
   1: keySETUP_FINALLY 10 0
LOAD_FAST 0 2
LOAD_FAST 1 4
DELETE_SUBSCR None 6
POP_BLOCK None 8
JUMP_FORWARD 20 10
DUP_TOP None 12
LOAD_GLOBAL 0 14
COMPARE_OP 10 16
POP_JUMP_IF_FALSE 30 18
POP_TOP None 20
POP_TOP None 22
POP_TOP None 24
POP_EXCEPT None 26
JUMP_FORWARD 2 28
END_FINALLY None 30
LOAD_CONST 0 32
RETURN_VALUE None 34
Name:              add
Filename:          foo
Argument count:    3
Positional-only arguments: 0
Kw-only arguments: 0
Number of locals:  6
Stack size:        4
Flags:             OPTIMIZED, NEWLOCALS, NOFREE
Constants:
   0: "Adds a (name, value) pair, doesn't overwrite the value if it already\n        exists.\n\n        >>> headers = HTTPHeaderDict(foo='bar')\n        >>> headers.add('Foo', 'baz')\n        >>> headers['foo']\n        'bar, baz'\n        "
   1: None
Names:
   0: lower
   1: _container
   2: setdefault
   3: append
Variable names:
   0: self
   1: key
   2: val
   3: key_lower
   4: new_vals
   5: valsLOAD_FAST 1 0
LOAD_METHOD 0 2
CALL_METHOD 0 4
STORE_FAST 3 6
LOAD_FAST 1 8
LOAD_FAST 2 10
BUILD_LIST 2 12
STORE_FAST 4 14
LOAD_FAST 0 16
LOAD_ATTR 1 18
LOAD_METHOD 2 20
LOAD_FAST 3 22
LOAD_FAST 4 24
CALL_METHOD 2 26
STORE_FAST 5 28
LOAD_FAST 4 30
LOAD_FAST 5 32
COMPARE_OP 9 34
POP_JUMP_IF_FALSE 48 36
LOAD_FAST 5 38
LOAD_METHOD 3 40
LOAD_FAST 2 42
CALL_METHOD 1 44
POP_TOP None 46
LOAD_CONST 1 48
RETURN_VALUE None 50
Name:              extend
Filename:          foo
Argument count:    1
Positional-only arguments: 0
Kw-only arguments: 0
Number of locals:  7
Stack size:        6
Flags:             OPTIMIZED, NEWLOCALS, VARARGS, VARKEYWORDS, NOFREE
Constants:
   0: 'Generic import function for any type of header-like object.\n        Adapted version of MutableMapping.update in order to insert items\n        with self.add instead of self.__setitem__\n        '
   1: 1
   2: 'extend() takes at most 1 positional arguments ({0} given)'
   3: 0
   4: ()
   5: 'keys'
   6: None
Names:
   0: len
   1: TypeError
   2: format
   3: isinstance
   4: HTTPHeaderDict
   5: iteritems
   6: add
   7: Mapping
   8: hasattr
   9: keys
  10: items
Variable names:
   0: self
   1: args
   2: kwargs
   3: other
   4: key
   5: val
   6: valueLOAD_GLOBAL 0 0
LOAD_FAST 1 2
CALL_FUNCTION 1 4
LOAD_CONST 1 6
COMPARE_OP 4 8
POP_JUMP_IF_FALSE 30 10
LOAD_GLOBAL 1 12
LOAD_CONST 2 14
LOAD_METHOD 2 16
LOAD_GLOBAL 0 18
LOAD_FAST 1 20
CALL_FUNCTION 1 22
CALL_METHOD 1 24
CALL_FUNCTION 1 26
RAISE_VARARGS 1 28
LOAD_GLOBAL 0 30
LOAD_FAST 1 32
CALL_FUNCTION 1 34
LOAD_CONST 1 36
COMPARE_OP 5 38
POP_JUMP_IF_FALSE 50 40
LOAD_FAST 1 42
LOAD_CONST 3 44
BINARY_SUBSCR None 46
JUMP_FORWARD 2 48
LOAD_CONST 4 50
STORE_FAST 3 52
LOAD_GLOBAL 3 54
LOAD_FAST 3 56
LOAD_GLOBAL 4 58
CALL_FUNCTION 2 60
POP_JUMP_IF_FALSE 96 62
LOAD_FAST 3 64
LOAD_METHOD 5 66
CALL_METHOD 0 68
GET_ITER None 70
FOR_ITER 20 72
UNPACK_SEQUENCE 2 74
STORE_FAST 4 76
STORE_FAST 5 78
LOAD_FAST 0 80
LOAD_METHOD 6 82
LOAD_FAST 4 84
LOAD_FAST 5 86
CALL_METHOD 2 88
POP_TOP None 90
JUMP_ABSOLUTE 72 92
JUMP_FORWARD 106 94
LOAD_GLOBAL 3 96
LOAD_FAST 3 98
LOAD_GLOBAL 7 100
CALL_FUNCTION 2 102
POP_JUMP_IF_FALSE 134 104
LOAD_FAST 3 106
GET_ITER None 108
FOR_ITER 20 110
STORE_FAST 4 112
LOAD_FAST 0 114
LOAD_METHOD 6 116
LOAD_FAST 4 118
LOAD_FAST 3 120
LOAD_FAST 4 122
BINARY_SUBSCR None 124
CALL_METHOD 2 126
POP_TOP None 128
JUMP_ABSOLUTE 110 130
JUMP_FORWARD 68 132
LOAD_GLOBAL 8 134
LOAD_FAST 3 136
LOAD_CONST 5 138
CALL_FUNCTION 2 140
POP_JUMP_IF_FALSE 176 142
LOAD_FAST 3 144
LOAD_METHOD 9 146
CALL_METHOD 0 148
GET_ITER None 150
FOR_ITER 20 152
STORE_FAST 4 154
LOAD_FAST 0 156
LOAD_METHOD 6 158
LOAD_FAST 4 160
LOAD_FAST 3 162
LOAD_FAST 4 164
BINARY_SUBSCR None 166
CALL_METHOD 2 168
POP_TOP None 170
JUMP_ABSOLUTE 152 172
JUMP_FORWARD 26 174
LOAD_FAST 3 176
GET_ITER None 178
FOR_ITER 20 180
UNPACK_SEQUENCE 2 182
STORE_FAST 4 184
STORE_FAST 6 186
LOAD_FAST 0 188
LOAD_METHOD 6 190
LOAD_FAST 4 192
LOAD_FAST 6 194
CALL_METHOD 2 196
POP_TOP None 198
JUMP_ABSOLUTE 180 200
LOAD_FAST 2 202
LOAD_METHOD 10 204
CALL_METHOD 0 206
GET_ITER None 208
FOR_ITER 20 210
UNPACK_SEQUENCE 2 212
STORE_FAST 4 214
STORE_FAST 6 216
LOAD_FAST 0 218
LOAD_METHOD 6 220
LOAD_FAST 4 222
LOAD_FAST 6 224
CALL_METHOD 2 226
POP_TOP None 228
JUMP_ABSOLUTE 210 230
LOAD_CONST 6 232
RETURN_VALUE None 234
Name:              getlist
Filename:          foo
Argument count:    3
Positional-only arguments: 0
Kw-only arguments: 0
Number of locals:  4
Stack size:        8
Flags:             OPTIMIZED, NEWLOCALS, NOFREE
Constants:
   0: "Returns a list of all the values for the named field. Returns an\n        empty list if the key doesn't exist."
   1: 1
   2: None
Names:
   0: _container
   1: lower
   2: KeyError
   3: _HTTPHeaderDict__marker
Variable names:
   0: self
   1: key
   2: default
   3: valsSETUP_FINALLY 18 0
LOAD_FAST 0 2
LOAD_ATTR 0 4
LOAD_FAST 1 6
LOAD_METHOD 1 8
CALL_METHOD 0 10
BINARY_SUBSCR None 12
STORE_FAST 3 14
POP_BLOCK None 16
JUMP_FORWARD 42 18
DUP_TOP None 20
LOAD_GLOBAL 2 22
COMPARE_OP 10 24
POP_JUMP_IF_FALSE 60 26
POP_TOP None 28
POP_TOP None 30
POP_TOP None 32
LOAD_FAST 2 34
LOAD_FAST 0 36
LOAD_ATTR 3 38
COMPARE_OP 8 40
POP_JUMP_IF_FALSE 52 42
BUILD_LIST 0 44
ROT_FOUR None 46
POP_EXCEPT None 48
RETURN_VALUE None 50
LOAD_FAST 2 52
ROT_FOUR None 54
POP_EXCEPT None 56
RETURN_VALUE None 58
END_FINALLY None 60
LOAD_FAST 3 62
LOAD_CONST 1 64
LOAD_CONST 2 66
BUILD_SLICE 2 68
BINARY_SUBSCR None 70
RETURN_VALUE None 72
LOAD_CONST 2 74
RETURN_VALUE None 76
Name:              __repr__
Filename:          foo
Argument count:    1
Positional-only arguments: 0
Kw-only arguments: 0
Number of locals:  1
Stack size:        5
Flags:             OPTIMIZED, NEWLOCALS, NOFREE
Constants:
   0: None
   1: '%s(%s)'
Names:
   0: type
   1: __name__
   2: dict
   3: itermerged
Variable names:
   0: selfLOAD_CONST 1 0
LOAD_GLOBAL 0 2
LOAD_FAST 0 4
CALL_FUNCTION 1 6
LOAD_ATTR 1 8
LOAD_GLOBAL 2 10
LOAD_FAST 0 12
LOAD_METHOD 3 14
CALL_METHOD 0 16
CALL_FUNCTION 1 18
BUILD_TUPLE 2 20
BINARY_MODULO None 22
RETURN_VALUE None 24
Name:              _copy_from
Filename:          foo
Argument count:    2
Positional-only arguments: 0
Kw-only arguments: 0
Number of locals:  4
Stack size:        5
Flags:             OPTIMIZED, NEWLOCALS, NOFREE
Constants:
   0: None
Names:
   0: getlist
   1: isinstance
   2: list
   3: _container
   4: lower
Variable names:
   0: self
   1: other
   2: key
   3: valLOAD_FAST 1 0
GET_ITER None 2
FOR_ITER 52 4
STORE_FAST 2 6
LOAD_FAST 1 8
LOAD_METHOD 0 10
LOAD_FAST 2 12
CALL_METHOD 1 14
STORE_FAST 3 16
LOAD_GLOBAL 1 18
LOAD_FAST 3 20
LOAD_GLOBAL 2 22
CALL_FUNCTION 2 24
POP_JUMP_IF_FALSE 36 26
LOAD_GLOBAL 2 28
LOAD_FAST 3 30
CALL_FUNCTION 1 32
STORE_FAST 3 34
LOAD_FAST 2 36
BUILD_LIST 1 38
LOAD_FAST 3 40
BINARY_ADD None 42
LOAD_FAST 0 44
LOAD_ATTR 3 46
LOAD_FAST 2 48
LOAD_METHOD 4 50
CALL_METHOD 0 52
STORE_SUBSCR None 54
JUMP_ABSOLUTE 4 56
LOAD_CONST 0 58
RETURN_VALUE None 60
Name:              copy
Filename:          foo
Argument count:    1
Positional-only arguments: 0
Kw-only arguments: 0
Number of locals:  2
Stack size:        3
Flags:             OPTIMIZED, NEWLOCALS, NOFREE
Constants:
   0: None
Names:
   0: type
   1: _copy_from
Variable names:
   0: self
   1: cloneLOAD_GLOBAL 0 0
LOAD_FAST 0 2
CALL_FUNCTION 1 4
CALL_FUNCTION 0 6
STORE_FAST 1 8
LOAD_FAST 1 10
LOAD_METHOD 1 12
LOAD_FAST 0 14
CALL_METHOD 1 16
POP_TOP None 18
LOAD_FAST 1 20
RETURN_VALUE None 22
Name:              iteritems
Filename:          foo
Argument count:    1
Positional-only arguments: 0
Kw-only arguments: 0
Number of locals:  4
Stack size:        4
Flags:             OPTIMIZED, NEWLOCALS, GENERATOR, NOFREE
Constants:
   0: 'Iterate over all header lines, including duplicate ones.'
   1: 1
   2: None
   3: 0
Names:
   0: _container
   1: lower
Variable names:
   0: self
   1: key
   2: vals
   3: valLOAD_FAST 0 0
GET_ITER None 2
FOR_ITER 50 4
STORE_FAST 1 6
LOAD_FAST 0 8
LOAD_ATTR 0 10
LOAD_FAST 1 12
LOAD_METHOD 1 14
CALL_METHOD 0 16
BINARY_SUBSCR None 18
STORE_FAST 2 20
LOAD_FAST 2 22
LOAD_CONST 1 24
LOAD_CONST 2 26
BUILD_SLICE 2 28
BINARY_SUBSCR None 30
GET_ITER None 32
FOR_ITER 18 34
STORE_FAST 3 36
LOAD_FAST 2 38
LOAD_CONST 3 40
BINARY_SUBSCR None 42
LOAD_FAST 3 44
BUILD_TUPLE 2 46
YIELD_VALUE None 48
POP_TOP None 50
JUMP_ABSOLUTE 34 52
JUMP_ABSOLUTE 4 54
LOAD_CONST 2 56
RETURN_VALUE None 58
Name:              itermerged
Filename:          foo
Argument count:    1
Positional-only arguments: 0
Kw-only arguments: 0
Number of locals:  3
Stack size:        7
Flags:             OPTIMIZED, NEWLOCALS, GENERATOR, NOFREE
Constants:
   0: 'Iterate over all headers, merging duplicate ones together.'
   1: 0
   2: ', '
   3: 1
   4: None
Names:
   0: _container
   1: lower
   2: join
Variable names:
   0: self
   1: key
   2: valLOAD_FAST 0 0
GET_ITER None 2
FOR_ITER 46 4
STORE_FAST 1 6
LOAD_FAST 0 8
LOAD_ATTR 0 10
LOAD_FAST 1 12
LOAD_METHOD 1 14
CALL_METHOD 0 16
BINARY_SUBSCR None 18
STORE_FAST 2 20
LOAD_FAST 2 22
LOAD_CONST 1 24
BINARY_SUBSCR None 26
LOAD_CONST 2 28
LOAD_METHOD 2 30
LOAD_FAST 2 32
LOAD_CONST 3 34
LOAD_CONST 4 36
BUILD_SLICE 2 38
BINARY_SUBSCR None 40
CALL_METHOD 1 42
BUILD_TUPLE 2 44
YIELD_VALUE None 46
POP_TOP None 48
JUMP_ABSOLUTE 4 50
LOAD_CONST 4 52
RETURN_VALUE None 54
Name:              items
Filename:          foo
Argument count:    1
Positional-only arguments: 0
Kw-only arguments: 0
Number of locals:  1
Stack size:        3
Flags:             OPTIMIZED, NEWLOCALS, NOFREE
Constants:
   0: None
Names:
   0: list
   1: iteritems
Variable names:
   0: selfLOAD_GLOBAL 0 0
LOAD_FAST 0 2
LOAD_METHOD 1 4
CALL_METHOD 0 6
CALL_FUNCTION 1 8
RETURN_VALUE None 10
Name:              from_httplib
Filename:          foo
Argument count:    2
Positional-only arguments: 0
Kw-only arguments: 0
Number of locals:  7
Stack size:        6
Flags:             OPTIMIZED, NEWLOCALS, NOFREE
Constants:
   0: 'Read headers from a Python 2 httplib message object.'
   1: (' ', '\t')
   2: 'Header continuation with no previous header: %s'
   3: -1
   4: ' '
   5: ':'
   6: 1
Names:
   0: headers
   1: startswith
   2: InvalidHeader
   3: strip
   4: split
   5: append
Variable names:
   0: cls
   1: message
   2: obs_fold_continued_leaders
   3: headers
   4: line
   5: key
   6: valueLOAD_CONST 1 0
STORE_FAST 2 2
BUILD_LIST 0 4
STORE_FAST 3 6
LOAD_FAST 1 8
LOAD_ATTR 0 10
GET_ITER None 12
FOR_ITER 104 14
STORE_FAST 4 16
LOAD_FAST 4 18
LOAD_METHOD 1 20
LOAD_FAST 2 22
CALL_METHOD 1 24
POP_JUMP_IF_FALSE 84 26
LOAD_FAST 3 28
POP_JUMP_IF_TRUE 46 30
LOAD_GLOBAL 2 32
LOAD_CONST 2 34
LOAD_FAST 4 36
BINARY_MODULO None 38
CALL_FUNCTION 1 40
RAISE_VARARGS 1 42
JUMP_FORWARD 38 44
LOAD_FAST 3 46
LOAD_CONST 3 48
BINARY_SUBSCR None 50
UNPACK_SEQUENCE 2 52
STORE_FAST 5 54
STORE_FAST 6 56
LOAD_FAST 5 58
LOAD_FAST 6 60
LOAD_CONST 4 62
BINARY_ADD None 64
LOAD_FAST 4 66
LOAD_METHOD 3 68
CALL_METHOD 0 70
BINARY_ADD None 72
BUILD_TUPLE 2 74
LOAD_FAST 3 76
LOAD_CONST 3 78
STORE_SUBSCR None 80
JUMP_ABSOLUTE 14 82
LOAD_FAST 4 84
LOAD_METHOD 4 86
LOAD_CONST 5 88
LOAD_CONST 6 90
CALL_METHOD 2 92
UNPACK_SEQUENCE 2 94
STORE_FAST 5 96
STORE_FAST 6 98
LOAD_FAST 3 100
LOAD_METHOD 5 102
LOAD_FAST 5 104
LOAD_FAST 6 106
LOAD_METHOD 3 108
CALL_METHOD 0 110
BUILD_TUPLE 2 112
CALL_METHOD 1 114
POP_TOP None 116
JUMP_ABSOLUTE 14 118
LOAD_FAST 0 120
LOAD_FAST 3 122
CALL_FUNCTION 1 124
RETURN_VALUE None 126
